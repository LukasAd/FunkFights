{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/brands/brands.component.ts","webpack:///src/app/brands/brands.component.html","webpack:///src/app/card-duel/card-duel.component.ts","webpack:///src/app/card-duel/card-duel.component.html","webpack:///src/app/error-image/error-image.component.ts","webpack:///src/app/error-image/error-image.component.html","webpack:///src/app/game-score/game-score.component.ts","webpack:///src/app/game-score/game-score.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/matchData/matchData.service.ts","webpack:///src/app/matchData/mockMatchData.ts","webpack:///src/app/memory/memory.component.ts","webpack:///src/app/memory/memory.component.html","webpack:///src/app/musicquiz/musicquiz.component.ts","webpack:///src/app/musicquiz/musicquiz.component.html","webpack:///src/app/quiz/quiz-category/quiz-category.component.ts","webpack:///src/app/quiz/quiz-category/quiz-category.component.html","webpack:///src/app/quiz/quiz.component.ts","webpack:///src/app/quiz/quiz.component.html","webpack:///src/app/spelling/spelling.component.ts","webpack:///src/app/spelling/spelling.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BrandsComponent","matchDataService","bestOf","startGameBool","columns","recordsPerLevel","level","records","subRecords","trackRow","index","item","trackRecord","setRoundRecords","setMatchData","matchData","getMatchData","offset","slice","i","sol","rowCount","Math","floor","length","remainder","rows","push","CardDuelComponent","dirkPoints","candPoints","dirkInput","candInput","dirkCard","candCard","dirkWins","candWins","processInput","ErrorImageComponent","console","log","maxLevel","GameScoreComponent","firstToDirk","firstToCand","setPointBoxes","boxCount","c","vis","HomeComponent","MatchDataService","providedIn","MATCHDATA","candidate","MemoryComponent","pairsCounter","solvedRecords","dirkCount","candCount","dirksTurn","initializeBoard","possPair","show","Array","shuffleBoard","board","randNumber","random","temp","el","count","card","countUncoveredCards","max","MusicquizComponent","QuizCategoryComponent","toggle","checkWinner","toggleColor","QuizComponent","categories","SpellingComponent","word","w","solved","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrandsComponent } from './brands/brands.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { SpellingComponent } from './spelling/spelling.component';\nimport { MusicquizComponent } from './musicquiz/musicquiz.component';\nimport { ErrorImageComponent } from './error-image/error-image.component';\nimport { MemoryComponent } from './memory/memory.component';\nimport { CardDuelComponent } from './card-duel/card-duel.component';\n\n\n\nconst routes: Routes = [  \n  { path: '', pathMatch: 'full', redirectTo: '/home'},\n  { path: 'quiz', component: QuizComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'brands', component: BrandsComponent},\n  { path: 'spelling', component: SpellingComponent},\n  { path: 'musicquiz', component: MusicquizComponent},\n  { path: 'error-image', component: ErrorImageComponent},\n  { path: 'memory', component: MemoryComponent},\n  { path: 'card-duel', component: CardDuelComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'igvs';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <br>\n  <div class=\"center\">\n    <img class=\"img-fluid\" src=\"../assets/raw/streudassalz.png\" style=\"height:100px\">\n  </div>\n</div>\n<br>\n\n<nav class=\"navbar navbar-expand-lg navbar bg mb-5\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\">Streu das Salz</a>\n    <ul class=\"nav nav-pills\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/home\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/memory\">Game 1</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/brands\">Game 2</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/quiz\">Game 4</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/musicquiz\">Game 5</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/spelling\">Game 6</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/card-duel\">Game 8</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/error-image\">Game 9</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrandsComponent } from './brands/brands.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { QuizCategoryComponent } from './quiz/quiz-category/quiz-category.component';\nimport { GameScoreComponent } from './game-score/game-score.component';\nimport { SpellingComponent } from './spelling/spelling.component';\nimport { MusicquizComponent } from './musicquiz/musicquiz.component';\nimport { ErrorImageComponent } from './error-image/error-image.component';\nimport { MemoryComponent } from './memory/memory.component';\nimport { CardDuelComponent } from './card-duel/card-duel.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BrandsComponent,\n    HomeComponent,\n    QuizComponent,\n    QuizCategoryComponent,\n    GameScoreComponent,\n    SpellingComponent,\n    MusicquizComponent,\n    ErrorImageComponent,\n    MemoryComponent,\n    CardDuelComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  exports: [\n    QuizCategoryComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, TrackByFunction } from '@angular/core';\nimport { MatchDataService } from '../matchData/matchData.service';\nimport BrandsJson from '../../assets/brands/brands.json';\nimport { MatchData } from '../matchData/matchData';\n\n\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.css']\n})\nexport class BrandsComponent implements OnInit {\n  bestOf: number = 5;\n  startGameBool: boolean = true;\n  matchData: MatchData;\n  columns: number = 4;\n  recordsPerLevel: number = 12;\n  level: number = 0;\n  records = BrandsJson;\n  subRecords = [];\n\n\n\n  constructor(private matchDataService: MatchDataService) { }\n\n  ngOnInit() {\n    this.setRoundRecords();\n    this.setMatchData();\n  }\n\n  startGame() {\n    this.startGameBool = !this.startGameBool;\n  }\n\n  setMatchData() {\n    this.matchData = this.matchDataService.getMatchData();\n  }\n\n  public setRoundRecords() {\n    let offset = this.level * this.recordsPerLevel;\n    this.subRecords = this.records.slice(offset, offset + this.recordsPerLevel);\n  }\n\n  public get table(): number[][] {\n    const rowCount = Math.floor(this.subRecords.length / this.columns);\n    const remainder = this.subRecords.length % this.columns;\n    const rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows.push(this.subRecords.slice(i * this.columns, (i * this.columns) + this.columns))\n    }\n    if (remainder) {\n      rows.push(this.subRecords.slice(this.subRecords.length - remainder, this.subRecords.length));\n    }\n    return rows;\n  };\n\n  public trackRow: TrackByFunction<number[]> = (index, item) => {\n    return index;\n  };\n\n  public trackRecord: TrackByFunction<number> = (index, item) => {\n    return item;\n  };\n\n  public getLogo(id) {\n    let path = '../../assets/brands/' + id + '/logo.png'\n    return path;\n  }\n\n  public getSol(id) {\n    let path = '../../assets/brands/' + id + '/sol.png'\n    return path;\n  }\n\n\n\n  public toggleSol(i) {\n    i = i - 1;\n    this.records[i].sol = !this.records[i].sol;\n  }\n\n  public previousLevel() {\n    this.level--;\n    this.setRoundRecords();\n  }\n\n  public nextLevel() {\n    this.level++;\n    this.setRoundRecords();\n  }\n\n}\n","<div class=\"container\">\n  <h1 style=\"text-align:center\">Marken raten</h1>\n\n  <app-game-score [bestOf]=\"bestOf\"></app-game-score>\n\n  <div *ngIf=\"startGameBool\">\n    <div class=\"row justify-content-sm-center\" style=\"margin-top:20px\">\n      <button class=\"btn-primary col-sm-3\" (click)=\"startGame()\">Start Game</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"!startGameBool\">\n    <div class=\"row\">\n      <div class=\"col-sm\">\n        <table>\n          <tr *ngFor=\"let row of table; trackBy: trackRow\">\n            <td *ngFor=\"let cell of row; trackBy: trackRecord\">\n              <div class=\"card brand-card container\">\n                <div class=\"row\" style=\"height: 120px\">\n                  <img src=\"{{ cell.sol ? getSol(cell.id) : getLogo(cell.id) }}\" type=\"button\"\n                    (click)=\"toggleSol(cell.id)\">\n                  <my-child [showMePartially]=\"sol\"></my-child>\n                </div>\n                <div class=\"row\" style=\"height:30px\">\n                  <p class=\"brand_cell_number\" style=\"font-size:20px\">{{(cell.id-1)%recordsPerLevel}}</p>\n                </div>\n\n              </div>\n\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <button class=\"btn btn-primary col-sm\" style=\" float: left;\" (click)=\"previousLevel()\">Previous Round</button>\n      <h2 class=\"round-count col-sm\">Runde: {{level+1}}</h2>\n      <button class=\"btn btn-primary col-sm\" style=\"float: right;\" (click)=\"nextLevel()\">Next Round</button>\n    </div>\n  </div>\n  <br>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatchData } from '../matchData/matchData';\nimport { MatchDataService } from '../matchData/matchData.service';\n\n@Component({\n  selector: 'app-card-duel',\n  templateUrl: './card-duel.component.html',\n  styleUrls: ['./card-duel.component.css']\n})\nexport class CardDuelComponent implements OnInit {\n  matchData: MatchData;\n  dirkPoints: number = 0;\n  candPoints: number = 0;\n  dirkCard: number;\n  candCard: number;\n  dirkWins: boolean;\n  candWins: boolean;\n\n  constructor(private matchDataService: MatchDataService) { }\n\n  ngOnInit(): void {\n    this.setMatchData();\n    }\n\n  setMatchData() {\n    this.matchData = this.matchDataService.getMatchData();\n  }\n\n  processInput(dirkInput, candInput){\n    dirkInput = +dirkInput;\n    candInput = +candInput;\n    this.dirkCard = dirkInput;\n    this.candCard = candInput;\n    if (dirkInput > candInput){\n      this.dirkPoints++;\n      this.dirkWins = true;\n    } else if ( dirkInput < candInput){\n      this.candPoints++;\n      this.candWins = true;\n    } else {\n      this.dirkWins = false;\n      this.candWins = false;\n    }\n  }\n\n}\n","<h2 style=\"text-align:center\" style=\"text-align:center\">Kartenduell</h2>\n<div class=\"container\">\n\n    <div class=\"row\">\n        <h2 class=\"col-sm\" style=\"text-align:left\">Dirk</h2>\n        <h2 class=\"col-sm\" style=\"text-align:right\">{{matchData.candidate}}</h2>\n    </div>\n    <div class=\"row\">\n        <h2 class=\"col-1 card\" style=\"text-align:left\">{{dirkPoints}}</h2>\n        <h2 class=\"col-10\"></h2>\n        <h2 class=\"col-1 card\" style=\"text-align:right\">{{candPoints}}</h2>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col-2\">\n            <form class=\"form\">\n                <input #dirkInput type=\"password\">\n            </form>\n        </div>\n        <div class=\"col-1\"></div>\n        <button class=\"col-2 btn btn-primary \" (click)=\"processInput(dirkInput.value,candInput.value); dirkInput.value=''; candInput.value=''\">\n            confirm\n        </button>\n        <div class=\"col-1\"></div>\n        <div class=\"col-2\">\n            <form class=\"form\">\n                <input #candInput type=\"password\">\n            </form>\n        </div>\n        <div class=\"col-2\"></div>\n    </div>\n    <br>\n    <br>   \n    <br>\n    <br>\n    <div class=\"row justify-content-center\">\n        <div class=\"card col-2 result-card\">\n            <h2 style=\"font-size:100px;\">{{dirkCard}}</h2>\n        </div>\n        <div class=\"col-1\"></div>\n        <div class=\"card col-2 result-card\">\n            <h2 style=\"font-size:100px;\">{{candCard}}</h2>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport ErrorImageJson from '../../assets/error-image/error-images.json';\n\n@Component({\n  selector: 'app-error-image',\n  templateUrl: './error-image.component.html',\n  styleUrls: ['./error-image.component.css']\n})\nexport class ErrorImageComponent implements OnInit {\n  bestOf: number = 9;\n  records = ErrorImageJson;\n  maxLevel: number;\n  level: number = 0;\n  startGameBool: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.records);\n    console.log(this.level);\n    console.log(this.records.length);\n    this.maxLevel = this.records.length;\n  }\n\n  toggleStartGame() {\n    this.startGameBool = !this.startGameBool;\n  }\n\n  getOriginalImagePath(id) {\n    if (id < 0 || id > this.records.length - 1 ) {\n      return \"../../assets/error-image/original.png\";\n    }\n    return \"../../assets/error-image/\" + id + \"/original.png\"\n  }\n\n  getErrorImagePath(id) {\n    console.log(id);\n    if (id < 0 || id > this.records.length -1) {\n      return \"../../assets/error-image/error.png\";\n    } else if (this.records[id].sol) {\n      return \"../../assets/error-image/\" + id + \"/sol.png\";\n    } else if (!this.records[id].sol) {\n      return \"../../assets/error-image/\" + id + \"/error.png\";\n    } else {\n      return \"\";\n    }\n  }\n\n  toggleSol(id) {\n    this.records[id].sol = !this.records[id].sol;\n  }\n\n  public previousLevel() {\n    this.level--;\n  }\n\n  public nextLevel() {\n    this.level++;\n  }\n\n\n}\n","<h1 style=\"text-align:center\">Fehlerbilder</h1>\n<app-game-score [bestOf]=\"bestOf\"></app-game-score>\n\n<div *ngIf=\"!startGameBool\">\n    <div class=\"container\">\n        <div class=\"row justify-content-sm-center\" style=\"margin-top:20px\">\n            <button class=\"btn-primary col-sm-2\" (click)=\"toggleStartGame()\">Start Game</button>\n        </div>\n    </div>\n</div>\n<br>\n<div *ngIf=\"startGameBool\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <img class=\"col-6\" src={{getOriginalImagePath(level)}}>\n            <img class=\"col-6\" src={{getErrorImagePath(level)}} (click)=\"toggleSol(level)\">\n        </div>\n    </div>\n    <br>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <button class=\"btn btn-primary col-sm\" style=\" float: left;\" (click)=\"previousLevel()\">Previous\n                Round</button>\n            <h2 class=\"round-count col-sm\" style=\"text-align: center;\">Runde: {{level}}</h2>\n            <button class=\"btn btn-primary col-sm\" style=\"float: right;\" (click)=\"nextLevel()\">Next Round</button>\n        </div>\n    </div>\n</div>\n<br>","import { Component, OnInit, Input } from '@angular/core';\nimport { MatchData } from '../matchData/matchData';\nimport { MatchDataService } from '../matchData/matchData.service';\n\n@Component({\n  selector: 'app-game-score',\n  templateUrl: './game-score.component.html',\n  styleUrls: ['./game-score.component.css']\n})\nexport class GameScoreComponent implements OnInit {\n  @Input() bestOf: number;\n  matchData: MatchData;\n  firstToDirk = [];\n  firstToCand = [];\n\n  constructor(private matchDataService: MatchDataService) { }\n\n  ngOnInit(): void {\n    this.setMatchData();\n    this.setPointBoxes();\n  }\n\n  setMatchData() {\n    this.matchData = this.matchDataService.getMatchData();\n  }\n\n  setPointBoxes() {\n    let boxCount = Math.floor(this.bestOf / 2) + 1;\n    for (let i = 0; i < boxCount; i++) {\n      this.firstToDirk.push({ 'count': i, 'vis': false });\n      this.firstToCand.push({ 'count': i, 'vis': false })\n    }\n  }\n\n  public getBox(c, i) {\n    let path = '';\n    if (i == 1) {\n      if (this.firstToDirk[c].vis) {\n        path = '../../assets/raw/box_filled.png';\n      } else {\n        path = '../../assets/raw/box_empty.png';\n      }\n    } else {\n      if (this.firstToCand[c].vis) {\n        path = '../../assets/raw/box_filled.png';\n      } else {\n        path = '../../assets/raw/box_empty.png';\n      }\n    }\n\n    return path;\n  }\n\n  public toggleBox(c, i) {\n    if (i == 1) {\n      this.firstToDirk[c].vis = !this.firstToDirk[c].vis;\n    } else {\n      this.firstToCand[c].vis = !this.firstToCand[c].vis;\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h2 class=\"col-sm\" style=\"text-align:left\">Dirk</h2>\n        <h2 class=\"col-sm\" style=\"text-align:right\">{{matchData.candidate}}</h2>\n    </div>\n    <div class=\"row\">\n\n        <div class=\"col-sm\">\n            <table class=\"float-left\">\n                <tr>\n                    <td class=\"score-box\" *ngFor=\"let entry of firstToDirk\">\n                        <img class=\"score-box\" src=\"{{getBox(entry.count,1)}}\" type=\"button\"\n                            (click)=\"toggleBox(entry.count,1)\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"col-sm\">\n            <table class=\"float-right\">\n                <tr>\n                    <td class=\"score-box\" *ngFor=\"let entry of firstToCand\">\n                        <img class=\"score-box\" src=\"{{getBox(entry.count,2)}}\" type=\"button\"\n                            (click)=\"toggleBox(entry.count,2)\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 style=\"text-align:center\">Zeit für ein D-d-d-d-d-d-duelll</h1>","import { Injectable } from '@angular/core';\nimport { MatchData } from './matchData';\nimport { MATCHDATA } from './mockMatchData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchDataService {\n\n  constructor() { }\n\n  getMatchData(): MatchData {\n    return MATCHDATA;\n  }\n}\n","import { MatchData } from './matchData';\r\n\r\nexport const MATCHDATA: MatchData = {\r\n    candidate : 'Carl'\r\n}","import { Component, OnInit, TrackByFunction } from '@angular/core';\nimport { MatchData } from '../matchData/matchData';\nimport { MatchDataService } from '../matchData/matchData.service';\n\n@Component({\n  selector: 'app-memory',\n  templateUrl: './memory.component.html',\n  styleUrls: ['./memory.component.css']\n})\nexport class MemoryComponent implements OnInit {\n  pairsCounter: number = 21;\n  startGameBool: boolean = true;\n  matchData: MatchData;\n  records: any[];\n  solvedRecords: any[] = [];\n  columns: number = 7;\n  dirkCount: number = 0;\n  candCount: number = 0;\n  dirksTurn: boolean = true;\n\n  constructor(private matchDataService: MatchDataService) { }\n\n  ngOnInit(): void {\n    this.initializeBoard();\n    this.setMatchData();\n  }\n\n  proceed() {\n    let possPair = [];\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].show) {\n        possPair.push(this.records[i]);\n        this.records[i].show = !this.records[i].show;\n      }\n    }\n    if (possPair[0].id == possPair[1].id) {\n      if (this.dirksTurn) {\n        this.dirkCount++;\n      } else {\n        this.candCount++;\n      }\n      this.solvedRecords.push(possPair[0]);\n      this.solvedRecords.push(possPair[1]);\n    } else {\n      this.dirksTurn = !this.dirksTurn;\n    }\n\n  }\n\n  setMatchData() {\n    this.matchData = this.matchDataService.getMatchData();\n  }\n\n  startGame() {\n    this.startGameBool = !this.startGameBool;\n  }\n\n  initializeBoard() {\n    let records = new Array();\n    for (let i = 0; i < this.pairsCounter * 2; i++) {\n      records.push({ id: i % this.pairsCounter, show: false, index: i });\n    }\n    this.records = records;\n    this.shuffleBoard();\n  }\n\n  shuffleBoard() {\n    let board = this.records;\n    for (let i = 0; i < board.length; i++) {\n      let randNumber = Math.floor(Math.random() * Math.floor(board.length));\n      let temp = board[i];\n      board[i] = board[randNumber];\n      board[randNumber] = temp;\n    }\n    this.records = board;\n  }\n\n  getImagePath(index) {\n    for (let el of this.solvedRecords) {\n      if (el == this.records[index]) {\n        return \"../../assets/memory/solved.png\";\n      }\n    }\n    if (this.records[index].show) {\n      return \"../../assets/memory/\" + this.records[index].id + \"/card.png\";\n    } else {\n      return \"../../assets/memory/covered.png\";\n    }\n  }\n\n  countUncoveredCards() {\n    let count = 0;\n    for (let card of this.records) {\n      if (card.show) {\n        count++;\n      };\n    }\n    return count;\n  }\n\n  toggleShowImage(index) {\n\n    if (this.countUncoveredCards() < 2 || this.records[index].show) {\n      this.records[index].show = !this.records[index].show;\n    }\n\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  public get table(): number[][] {\n    const rowCount = Math.floor(this.records.length / this.columns);\n    const remainder = this.records.length % this.columns;\n    const rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows.push(this.records.slice(i * this.columns, (i * this.columns) + this.columns))\n    }\n    if (remainder) {\n      rows.push(this.records.slice(this.records.length - remainder, this.records.length));\n    }\n    return rows;\n  };\n\n  public trackRow: TrackByFunction<number[]> = (index, item) => {\n    return index;\n  };\n\n  public trackRecord: TrackByFunction<number> = (index, item) => {\n    return item;\n  };\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"startGameBool\">\n        <div class=\"row justify-content-sm-center\" style=\"margin-top:20px\">\n            <button class=\"btn-primary col-sm-3\" (click)=\"startGame()\">Start Game</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"!startGameBool\">\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <h2 class=\"col-sm\" style=\"text-align: right\" [ngClass]=\"{'turn': dirksTurn}\">Dirk</h2>\n                <h2 class=\"col-sm\" style=\"text-align: left\" [ngClass]=\"{'turn': dirksTurn}\">{{dirkCount}}</h2>\n                <div class=\"col-sm btn btn-primary\" (click)=\"proceed()\">confirm</div>\n                <h2 class=\"col-sm\" style=\"text-align:right\" [ngClass]=\"{'turn': !dirksTurn}\">{{candCount}}</h2>\n                <h2 class=\"col-sm\" style=\"text-align: left\" [ngClass]=\"{'turn': !dirksTurn}\">{{matchData.candidate}}\n                </h2>\n            </div>\n            <br>\n            <div class=\"row justify-content-center\">\n                <table>\n                    <tr *ngFor=\"let row of table; index as x; trackBy: trackRow\">\n                        <td *ngFor=\"let cell of row; index as y; trackBy: trackRecord\">\n                            <div class=\"container\">\n\n                                <img class=\"m-card\" src=\"{{getImagePath(cell.index)}}\" type=\"button\"\n                                    (click)=\"toggleShowImage(cell.index)\">\n                                <my-child [showMePartially]=\"sol\"></my-child>\n                                <div style=\"text-align:center\">{{y+x*columns}}</div>\n\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-musicquiz',\n  templateUrl: './musicquiz.component.html',\n  styleUrls: ['./musicquiz.component.css']\n})\nexport class MusicquizComponent implements OnInit {\n  bestOf: number = 13;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 style=\"text-align:center\">Filmmusik</h1>\n<app-game-score [bestOf]=\"bestOf\"></app-game-score>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz-category',\n  templateUrl: './quiz-category.component.html',\n  styleUrls: ['./quiz-category.component.css']\n})\nexport class QuizCategoryComponent implements OnInit {\n  @Input() category: string;\n  toggle: boolean[] = [false, false, false, false, false, false];\n  dirkWins: boolean = false;\n  candWins: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkWinner() {\n    if (this.toggle[0] && this.toggle[2] && this.toggle[4]) {\n      this.dirkWins = true;\n    } else {\n      this.dirkWins = false;\n    }\n    if (this.toggle[1] && this.toggle[3] && this.toggle[5]) {\n      this.candWins = true;\n    } else {\n      this.candWins = false;\n    }\n  }\n\n  toggleColor(i) {\n    this.toggle[i] = !this.toggle[i];\n    this.checkWinner();\n  }\n\n}\n","<div class=\"container\" style=\"width:200px\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"container\" style=\"height:200px;\">\n                <div class=\"h-25 row\">\n                    <div class=\"card col-sm\" [ngClass]=\"{'blue': dirkWins, 'red': candWins}\">\n                        <h3 style=\"text-align: center;\">\n                            {{category}}\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"h-25 row\">\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(0)\" [ngClass]=\"{'blue': toggle[0]}\"></div>\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(1)\" [ngClass]=\"{'red': toggle[1]}\"></div>\n                </div>\n                <div class=\"h-25 row\">\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(2)\" [ngClass]=\"{'blue': toggle[2]}\"></div>\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(3)\" [ngClass]=\"{'red': toggle[3]}\"></div>\n                </div>\n                <div class=\"h-25 row\">\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(4)\" [ngClass]=\"{'blue': toggle[4]}\"></div>\n                    <div class=\"btn btn-primary col-sm\" (click)=\"toggleColor(5)\" [ngClass]=\"{'red': toggle[5]}\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n  bestOf: number = 5;\n  categories: string[] = [\"Sport\", \"Geschichte\", \"Aktuelles\", \"Politik\", \"Astro\"];\n  startGameBool: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  startGame() {\n    this.startGameBool = !this.startGameBool;\n  }\n}\n","<div class=\"container\">\n    <h1 style=\"text-align:center\">Quizsson</h1>\n\n    <app-game-score [bestOf]=\"bestOf\"></app-game-score>\n\n    <div class=\"row\" style=\"margin-top:100px;\"></div>\n\n\n    <div *ngIf=\"!startGameBool\">\n        <div class=\"row justify-content-sm-center\" style=\"margin-top:20px\">\n            <button class=\"btn-primary col-sm-3\" (click)=\"startGame()\">Start Game</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"startGameBool\">\n        <div class=\"container\">\n            <div class=\"row justify-content-sm-center\">\n                <div *ngFor=\"let category of categories\">\n                    <div>\n                        <app-quiz-category class=\"col-sm\" [category]=\"category\"></app-quiz-category>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, TrackByFunction } from '@angular/core';\nimport WordsJson from '../../assets/spelling/words.json';\n\n@Component({\n  selector: 'app-spelling',\n  templateUrl: './spelling.component.html',\n  styleUrls: ['./spelling.component.css']\n})\nexport class SpellingComponent implements OnInit {\n  startGameBool : boolean = true;\n  columns : number = 5;\n  recordsPerLevel : number = 15;\n  level : number = 0;\n  word : string = \"\";\n  records = WordsJson;\n  subRecords = [];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.setRoundRecords();\n  }\n\n  startGame(){\n    this.startGameBool = !this.startGameBool;\n  }\n\n  public setRoundRecords() {\n    let offset = this.level * this.recordsPerLevel;\n    this.subRecords = this.records.slice(offset, offset + this.recordsPerLevel);\n  }\n\n  public get table(): number[][] {\n    const rowCount = Math.floor(this.subRecords.length / this.columns);\n    const remainder = this.subRecords.length % this.columns;\n    const rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      rows.push(this.subRecords.slice(i * this.columns, (i * this.columns) + this.columns))\n    }\n    if (remainder) {\n      rows.push(this.subRecords.slice(this.subRecords.length - remainder, this.subRecords.length));\n    }\n    return rows;\n  };\n\n  public trackRow: TrackByFunction<number[]> = (index, item) => {\n    return index;\n  };\n\n  public trackRecord: TrackByFunction<number> = (index, item) => {\n    return item;\n  };\n\n  public previousLevel() {\n    this.level--;\n    this.setRoundRecords();\n  }\n\n  public nextLevel() {\n    this.level++;\n    this.setRoundRecords();\n  }\n\n  public setWord(id,w){\n    if(id!=-1){\n      id = id-1;\n      this.records[id].solved = !this.records[id].solved;\n\n    }   \n    this.word = w;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <h1>Buchstabieren</h1>\n    </div>\n    <br>\n\n    <div *ngIf=\"startGameBool\">\n        <div class=\"row justify-content-sm-center\" style=\"margin-top:20px\">\n            <button class=\"btn-primary col-sm-3\" (click)=\"startGame()\">Start Game</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"!startGameBool\">\n        <div class=\"row justify-content-center\">\n            <div class=\"card\" style=\"padding:10px\" (click)=\"setWord(-1,'')\">\n                <div class=\"row\">\n                    <h2 class=\"col-sm\">Lösung:</h2>\n                    <h2 class=\"col-sm\">{{word}}</h2>\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"row justify-content-center\">\n            <table>\n                <tr *ngFor=\"let row of table; trackBy: trackRow\">\n                    <td *ngFor=\"let cell of row; trackBy: trackRecord\" style=\"padding: 10px;\"> \n                        <button class=\"btn-primary word-btn\" (click)=\"setWord(cell.id,cell.word)\" [ngClass]=\"{'solved': cell.solved}\">{{cell.id%15}}</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <br>\n        <div class=\"row justify-content-center\">\n            <button class=\"btn btn-primary col-sm\" style=\" float: left;\" (click)=\"previousLevel()\">Previous Round</button>\n            <h2 class=\"round-count col-sm\">Runde: {{level+1}}</h2>\n            <button class=\"btn btn-primary col-sm\" style=\"float: right;\" (click)=\"nextLevel()\">Next Round</button>\n        </div>\n\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}